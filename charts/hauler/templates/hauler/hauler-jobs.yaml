{{- if and (or .Values.haulerJobs.remote .Values.haulerJobs.local) (or (and .Values.haulerJobs.local .Values.haulerJobs.local.store) (and .Values.haulerJobs.remote .Values.haulerJobs.remote.hauls (gt (len .Values.haulerJobs.remote.hauls) 0)) (and .Values.haulerJobs.remote .Values.haulerJobs.remote.manifests (gt (len .Values.haulerJobs.remote.manifests) 0))  (and .Values.haulerJobs.local .Values.haulerJobs.local.hauls (gt (len .Values.haulerJobs.local.hauls) 0)) (and .Values.haulerJobs.local .Values.haulerJobs.local.manifests (gt (len .Values.haulerJobs.local.manifests) 0))  ) }}
apiVersion: batch/v1
kind: Job
metadata:
  name: hauler-loader
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "hauler.labels" . | nindent 4 }}
    {{- with .Values.hauler.labels -}}
{{ toYaml . | nindent 4 }}
    {{- end }}
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "1"
    {{- with .Values.hauler.annotations -}}
{{ toYaml . | nindent 4 }}
    {{- end }}
spec:
  template:
    spec:
      {{- if or (and .Values.haulerJobs.local .Values.haulerJobs.local.store) (and .Values.haulerJobs.local .Values.haulerJobs.local.hauls (gt (len .Values.haulerJobs.local.hauls) 0)) (and .Values.haulerJobs.local .Values.haulerJobs.local.manifests (gt (len .Values.haulerJobs.local.manifests) 0)) }}
      {{- if .Values.haulerJobs.localNode }}
      nodeSelector:
        kubernetes.io/hostname: {{ .Values.haulerJobs.localNode }}
      {{- end }}
      initContainers:
        - name: hauler-fetch
          image: {{ .Values.haulerJobs.image.repository }}:{{ .Values.haulerJobs.image.tag }}
          imagePullPolicy: {{ .Values.haulerJobs.imagePullPolicy }}
          command: ["/bin/sh", "-c"]
          args:
            - |
              rm -rf /store/*
              {{- if and .Values.haulerJobs.local .Values.haulerJobs.local.store }}
              cp -av /local-store/* /store/   &&
              {{- end }}
              {{- if and .Values.haulerJobs.local .Values.haulerJobs.local.hauls }}
              {{- range $index, $haul := .Values.haulerJobs.local.hauls }}
              mkdir -p /hauls/local-haul-{{ $index }}/ &&
              cp -v /tmp/local-haul-{{ $index }}/{{ $haul.name }} /hauls/local-haul-{{ $index }}/ &&
              {{- end}}
              {{- end}}
              {{- if and .Values.haulerJobs.local .Values.haulerJobs.local.manifests }}
              {{- range $index, $manifest := .Values.haulerJobs.local.manifests }}
              mkdir -p /manifests/local-manifest-{{ $index }}/ &&
              cp -v /tmp/local-manifest-{{ $index }}/{{ $manifest.name }} /manifests/local-manifest-{{ $index }}/ &&
              {{- end}}
              {{- end}}
              chown -Rv 1001:1001 /store &&
              echo hauler fetch completed
          volumeMounts:
            {{- if or (and .Values.haulerJobs.remote .Values.haulerJobs.remote.hauls (gt (len .Values.haulerJobs.remote.hauls) 0)) (and .Values.haulerJobs.local .Values.haulerJobs.local.hauls (gt (len .Values.haulerJobs.local.hauls) 0)) }}
            - name: haul-data
              mountPath: /hauls
            {{- end }}
            {{- if or (and .Values.haulerJobs.remote .Values.haulerJobs.remote.manifests (gt (len .Values.haulerJobs.remote.manifests) 0)) (and .Values.haulerJobs.local .Values.haulerJobs.local.manifests (gt (len .Values.haulerJobs.local.manifests) 0)) }}
            - name: manifest-data
              mountPath: /manifests
            {{- end }}
            {{- if and .Values.haulerJobs.local .Values.haulerJobs.local.hauls (gt (len .Values.haulerJobs.local.hauls) 0) }}
            {{- range $index, $haul := .Values.haulerJobs.local.hauls }}
            - name: local-haul-{{ $index }}
              mountPath: /tmp/local-haul-{{ $index }}
            {{- end }}
            {{- end }}
            {{- if and .Values.haulerJobs.local .Values.haulerJobs.local.manifests (gt (len .Values.haulerJobs.local.manifests) 0) }}
            {{- range $index, $manifest := .Values.haulerJobs.local.manifests }}
            - name: local-manifest-{{ $index }}
              mountPath: /tmp/local-manifest-{{ $index }}
            {{- end }}
            {{- end }}
            {{- if and .Values.haulerJobs.local .Values.haulerJobs.local.store }}
            - name: store-data
              mountPath: /local-store
            {{- end }}
            - name: hauler-data
              mountPath: /store
          securityContext:
            runAsUser: 0
      {{- end }}
      containers:
        - name: hauler-load
          image: {{ .Values.haulerJobs.image.repository }}:{{ .Values.haulerJobs.image.tag }}
          imagePullPolicy: {{ .Values.hauler.imagePullPolicy }}
          command: ["/bin/sh", "-c"]
          args:
            - |
            {{- if or (and .Values.haulerJobs.remote .Values.haulerJobs.remote.manifests (gt (len .Values.haulerJobs.remote.manifests) 0)) (and .Values.haulerJobs.local .Values.haulerJobs.local.manifests (gt (len .Values.haulerJobs.local.manifests) 0)) }}
            {{- range .Values.haulerJobs.remote.manifests }}
              hauler store --store /store sync --filename {{ .path }} &&
            {{- end }}
            {{- range $index, $manifest := .Values.haulerJobs.local.manifests }}
              hauler store --store /store sync --filename /manifests/local-manifest-{{ $index }}/{{ $manifest.name }} &&
            {{- end }}
            {{- end }}
            {{- if or (and .Values.haulerJobs.remote .Values.haulerJobs.remote.hauls (gt (len .Values.haulerJobs.remote.hauls) 0)) (and .Values.haulerJobs.local .Values.haulerJobs.local.hauls (gt (len .Values.haulerJobs.local.hauls) 0)) }}
            {{- range .Values.haulerJobs.remote.hauls }}
              hauler store --store /store load --filename {{ .path }} &&
            {{- end }}
            {{- range $index, $haul := .Values.haulerJobs.local.hauls }}
              hauler store --store /store load --filename /hauls/local-haul-{{ $index }}/{{ $haul.name }} &&
            {{- end }}
            {{- end }}
              echo hauler load completed &&
              hauler store --store /store info
          volumeMounts:
            {{- if or (and .Values.haulerJobs.remote .Values.haulerJobs.remote.hauls (gt (len .Values.haulerJobs.remote.hauls) 0)) (and .Values.haulerJobs.local .Values.haulerJobs.local.hauls (gt (len .Values.haulerJobs.local.hauls) 0)) }}
            - name: haul-data
              mountPath: /hauls
            {{- end }}
            {{- if or (and .Values.haulerJobs.remote .Values.haulerJobs.remote.manifests (gt (len .Values.haulerJobs.remote.manifests) 0)) (and .Values.haulerJobs.local .Values.haulerJobs.local.manifests (gt (len .Values.haulerJobs.local.manifests) 0)) }}
            - name: manifest-data
              mountPath: /manifests
            {{- end }}
            - name: hauler-data
              mountPath: /store
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop: ["ALL"]
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
      restartPolicy: OnFailure
      volumes:
        {{- if or (and .Values.haulerJobs.remote .Values.haulerJobs.remote.hauls (gt (len .Values.haulerJobs.remote.hauls) 0)) (and .Values.haulerJobs.local .Values.haulerJobs.local.hauls (gt (len .Values.haulerJobs.local.hauls) 0)) }}
        - name: haul-data
          emptyDir:
        {{- end }}
        {{- if (and .Values.haulerJobs.local .Values.haulerJobs.local.hauls (gt (len .Values.haulerJobs.local.hauls) 0)) }}
        {{- range $index, $haul := .Values.haulerJobs.local.hauls }}
        - name: local-haul-{{ $index }}
          hostPath:
            path: {{ $haul.path }}
        {{- end }}
        {{- end }}
        {{- if or (and .Values.haulerJobs.remote .Values.haulerJobs.remote.manifests (gt (len .Values.haulerJobs.remote.manifests) 0)) (and .Values.haulerJobs.local .Values.haulerJobs.local.manifests (gt (len .Values.haulerJobs.local.manifests) 0)) }}
        - name: manifest-data
          emptyDir:
        {{- end }}
        {{- if (and .Values.haulerJobs.local .Values.haulerJobs.local.manifests (gt (len .Values.haulerJobs.local.manifests) 0)) }}
        {{- range $index, $manifest := .Values.haulerJobs.local.manifests }}
        - name: local-manifest-{{ $index }}
          hostPath:
            path: {{ $manifest.path }}
        {{- end }}
        {{- end }}
        {{- if and .Values.haulerJobs.local .Values.haulerJobs.local.store }}
        - name: store-data
          hostPath:
            path: {{ .Values.haulerJobs.local.store }}
        {{- end }}
        - name: hauler-data
          persistentVolumeClaim:
            claimName: hauler-data
{{- end }}
